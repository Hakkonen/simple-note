{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/simple-note/simple-note-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport IndexItem from \"./components/IndexItem\";\nimport ContentEditable from \"react-contenteditable\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    index: 1,\n    header: \"World, hello!\",\n    text: \"Hello world\"\n  }, {\n    index: 2,\n    header: \"Hello there guvna what's it about\",\n    text: \"Test note\"\n  }, {\n    index: 3,\n    header: \"My note\",\n    text: \"Pop a testie\"\n  }]);\n  const [header, setHeader] = useState(\"Header\");\n  const [text, setText] = useState(\"Text body\"); // Opens object as note\n\n  function OpenNote(e) {\n    // Get ID\n    console.log(e.target.id);\n    const selectID = e.target.id; // Load ID object to note page\n\n    let selectedNote;\n\n    for (const item of notes) {\n      if (item.index == selectID) {\n        selectedNote = item;\n      }\n    }\n\n    console.log(selectedNote);\n    setHeader(() => selectedNote.header);\n    setText(() => selectedNote.text);\n  } // Removes styling from ctrl+c pasting\n\n\n  function PasteAsPlainText(event) {\n    event.preventDefault();\n    const text = event.clipboardData.getData(\"text/plain\");\n    document.execCommand(\"insertHTML\", false, text);\n  } // Populates note index\n  // const printNotes = notes.map(item => <IndexItem key={item.index} index={item.index} header={item.header} text={item.text} OpenNote={OpenNote} />)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"SimpleNote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-index\",\n        children: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-page\",\n        children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n          html: header,\n          className: \"content-editable note-header\",\n          onChange: e => setHeader(e.target.value),\n          onPaste: PasteAsPlainText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentEditable, {\n          html: text,\n          className: \"content-editable note-text\",\n          onChange: e => setText(e.target.value),\n          onPaste: PasteAsPlainText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lyXoYb6SGY2GCtTsGINJ5Spd080=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/simple-note/simple-note-react/src/App.js"],"names":["React","useEffect","useState","IndexItem","ContentEditable","App","notes","setNotes","index","header","text","setHeader","setText","OpenNote","e","console","log","target","id","selectID","selectedNote","item","PasteAsPlainText","event","preventDefault","clipboardData","getData","document","execCommand","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport IndexItem from \"./components/IndexItem\"\nimport ContentEditable from \"react-contenteditable\"\nimport './App.css'\n\nfunction App() {\n  const [ notes, setNotes ] = useState([\n    {\n      index: 1,\n      header: \"World, hello!\",\n      text: \"Hello world\"\n    },\n    {\n        index: 2,\n        header: \"Hello there guvna what's it about\",\n        text: \"Test note\"\n    },\n    {\n        index: 3,\n        header: \"My note\",\n        text: \"Pop a testie\"\n    }\n  ])\n  const [ header, setHeader ] = useState(\"Header\")\n  const [ text, setText ] = useState(\"Text body\")\n\n  // Opens object as note\n  function OpenNote(e) {\n    // Get ID\n    console.log(e.target.id)\n    const selectID = e.target.id\n    // Load ID object to note page\n    let selectedNote\n    for(const item of notes) {\n      if(item.index == selectID) {\n        selectedNote = item\n      }\n    }\n    console.log(selectedNote)\n    setHeader(() => selectedNote.header)\n    setText(() => selectedNote.text)\n  }\n\n  // Removes styling from ctrl+c pasting\n  function PasteAsPlainText (event) {\n    event.preventDefault()\n\n    const text = event.clipboardData.getData(\"text/plain\")\n    document.execCommand(\"insertHTML\", false, text)\n  }\n\n  // Populates note index\n  // const printNotes = notes.map(item => <IndexItem key={item.index} index={item.index} header={item.header} text={item.text} OpenNote={OpenNote} />)\n\n\n  return (\n    <div className=\"app-container\">\n\n      <div className=\"navbar\">\n        <div className=\"navbar-logo\">\n          <p>SimpleNote</p>\n        </div>\n      </div>\n\n      <div className=\"note-container\">\n        <div className=\"note-index\">\n          {notes}\n        </div>\n\n        <div className=\"note-page\">\n          <ContentEditable  \n            html={header}\n            className=\"content-editable note-header\"\n            onChange={e => setHeader(e.target.value)}  \n            onPaste={PasteAsPlainText}\n          />\n          <ContentEditable  \n            html={text}\n            className=\"content-editable note-text\"\n            onChange={e => setText(e.target.value)}  \n            onPaste={PasteAsPlainText}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}